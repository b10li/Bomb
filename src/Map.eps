
import Player;
import Helpers;

const row						= 20;
const col						= 13;
const Map						= EUDArray(row*col);
const scale						= 32;

const fillLoc 					= $L('draw');
const x_offset 					= 0;	// tile index ex) [x][y]
const y_offset 					= 0;
//-------------------------------------------------

function GetMapXY(x, y)
{
	return Map[x + y* row];
}

function SetMapXY(x, y, val)
{
	Map[x + y* row] = val;
}

function GetTileIndex(unitEpd)
{
	if(unitEpd != 0)
	{
		const posUnitX, posUnitY = dwbreak(dwread_epd(unitEpd + 0x28 / 4))[[0,1]];
		const x = posUnitX / scale;
		const y = posUnitY / scale;
		return x - x_offset, y - y_offset;
	}
	else return 0, 0;
}

function GetTileXY(x,y)
{
	return (((x+ x_offset)*scale)+scale/2), (((y+y_offset)*scale)+scale/2);
}


function InitMap()
{
	for(var i = 0; i < row; i++)
		for(var j = 0; j < col; j++)
			SetMapXY(i, j, 0);
}

function Mapper()
{
	const Map0 = [
//  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 6 7 8 9 0
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, //0
	1,0,0,2,2,2,2,2,0,0,0,0,2,2,2,2,2,0,0,1, //1
	1,0,1,2,1,2,1,2,1,0,0,1,2,1,2,1,2,1,0,1, //2
	1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1, //3
	1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1, //4
	1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1, //5
	1,0,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,0,1, //6
	1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1, //7
	1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1, //8
	1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1, //9
	1,0,1,2,1,2,1,2,1,0,0,1,2,1,2,1,2,1,0,1, //10
	1,0,0,2,2,2,2,2,0,0,0,0,2,2,2,2,2,0,0,1, //11
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1  //12
	];	

	for(var x = 0; x < row; x++)
		for(var y = 0; y < col; y++)
			SetMapXY(x, y, Map0[x + y *row]); 
}

function GetMap()
{
	Mapper();
}


//------------- Renderer 

function fill(x, y, style);
function Render() {
	for (var y = 0; y < col; y++) {
		for (var x = 0; x < row; x++) {
			const tile = Map[x + y *row];
			var style;
			if 		(tile == 0) style = -1;		 // 바깥
			else if (tile == 1) style = 220;		// 안	1== Unitid_wall
			else 				style = 221;		// 벽
			fill(x, y, style);
		}
	}
}

function fill(x, y, style) {
	if(style == -1) return;
	const x2, y2 = GetTileXY(x, y);
	Helpers.EUDSetLocation(fillLoc, x2, y2);
	CreateUnit(1, style, fillLoc + 1, Helpers.Computer);
}
